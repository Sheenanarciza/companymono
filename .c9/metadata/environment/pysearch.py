{"filter":false,"title":"pysearch.py","tooltip":"/pysearch.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":38,"column":10},"action":"insert","lines":["# pysearch.py","import argparse","import pathlib","def search_folder(path, extension, file_size=None):","    \"\"\"","    Search folder for files","    \"\"\"","    folder = pathlib.Path(path)","    files = list(folder.rglob(f'*.{extension}'))","    if not files:","        print(f'No files found with {extension=}')","        return","    if file_size is not None:","        files = [f for f in files","                 if f.stat().st_size > file_size]","    print(f'{len(files)} *.{extension} files found:')","    for file_path in files:","        print(file_path)","def main():","    parser = argparse.ArgumentParser(","        'PySearch',","        description='PySearch - The Python Powered File Searcher')","    parser.add_argument('-p', '--path',","                        help='The path to search for files',","                        required=True,","                        dest='path')","    parser.add_argument('-e', '--ext',","                        help='The extension to search for',","                        required=True,","                        dest='extension')","    parser.add_argument('-s', '--size',","                        help='The file size to filter on in bytes',","                        type=int,","                        dest='size',","                        default=None)","    args = parser.parse_args()","    search_folder(args.path, args.extension, args.size)","if __name__ == '__main__':","    main()"],"id":1}]]},"ace":{"folds":[],"scrolltop":234,"scrollleft":0,"selection":{"start":{"row":1,"column":0},"end":{"row":38,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":13,"state":"start","mode":"ace/mode/python"}},"timestamp":1700056857019,"hash":"fbdacbbe243bc58e18948a6924ddd95337f2e2d5"}